import{_ as e,a as t,b as a,c as o,i as n,d as i,S as r,s,e as h,t as l,f as d,g as c,h as u,j as p,k as f,l as m,m as g,n as v,o as y,p as w}from"./client.858c6720.js";function b(e){var o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=t(e);if(o){var r=t(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return a(this,n)}}function k(e){var t,a,o,n,i,r,s,b,k,P,E,I,T,S,R,G,W,A,B,x,D,C,j,U,H,N,V,K,z,M,O,q,J,Q,Y,F,_,Z,X,L,$,ee,te,ae,oe,ne,ie,re,se,he,le,de,ce,ue,pe,fe,me,ge,ve,ye,we,be,ke,Pe,Ee,Ie,Te,Se,Re,Ge,We,Ae,Be,xe,De,Ce,je,Ue,He,Ne,Ve,Ke,ze,Me,Oe,qe,Je,Qe,Ye,Fe,_e,Ze,Xe,Le,$e,et,tt,at,ot,nt,it,rt,st,ht,lt,dt,ct,ut,pt,ft,mt,gt,vt,yt,wt,bt,kt,Pt,Et,It,Tt,St,Rt,Gt,Wt,At,Bt,xt,Dt,Ct,jt,Ut,Ht,Nt,Vt,Kt,zt,Mt,Ot,qt,Jt,Qt,Yt,Ft,_t,Zt,Xt,Lt,$t;return{c:function(){t=h("p"),a=l("Welcome to the Phase 4 Ground Weekly Report!"),o=d(),n=h("p"),i=l("409!"),r=d(),s=h("p"),b=l("Video link\n"),k=h("a"),P=l("https://youtu.be/6tW04jWZGjM"),E=d(),I=h("h2"),T=l("2 4 6 8 Everybody Correlate!"),S=d(),R=h("p"),G=l("Correlator team had a conference call on Thursday 5 April 2018. Jordan, Brennan, Ed, and I talked on the conference bridge Ed set up for us for about 45 minutes. We covered a lot of ground and got some idea of next steps. We have a repository that has GNU Radio draft blocks that do the Pi/2 BPSK demodulation and decoding, and we need to get it working as a correlator."),W=d(),A=h("p"),B=l("We also have a correlation estimation block in GNU Radio that has an issue."),x=d(),D=h("p"),C=l("Brennan Ashton reviewed our block and didn’t see any major issues yet, and then went out to see what he could see about the correlation estimation block."),j=d(),U=h("p"),H=l("Please review Brennan’s pull request here:\n"),N=h("a"),V=l("https://github.com/gnuradio/gnuradio/pull/1725"),K=d(),z=h("p"),M=l("This is an attempt to solve this issue here:\n"),O=h("a"),q=l("https://github.com/gnuradio/gnuradio/issues/1207"),J=d(),Q=h("p"),Y=l("Which if successful will help us and a lot of other people."),F=d(),_=h("p"),Z=l("This effort is in progress and will be updated as the code is reviewed and feedback from GNU Radio given."),X=d(),L=h("h2"),$=l("10GHz Filter"),ee=d(),te=h("p"),ae=l("We have a 10GHz filter design proposed from Jeffrey Pawlan."),oe=d(),ne=h("p"),ie=l("It covers the 10GHz amateur band, has 0.1dB variation over the band, 0.1dB insertion loss, and 20-30dB return loss. It’s a high-performance filter and we are talking about how to get it published, how many prototypes to build, and what the potential market might be. Here’s the first four documents from Jeffrey. These are in the repository at the link in the notes. If you have feedback we want to hear it."),re=d(),se=h("p"),he=h("a"),le=l("https://github.com/phase4ground/DVB-receiver/tree/master/Pawlan-10GHz-Filter"),de=d(),ce=h("h2"),ue=l("Block Party at GNU Radio Conference 2018"),pe=d(),fe=h("p"),me=l("We are sponsoring a Block Party at GNU Radio Conference 2018. This is a multi-day hackfest, workshop, and summit all about making an open source DVB-S2 and DVB-S2X receiver in GNU Radio. Come and help. We have five solid technical docents for the event and could use more. The goal is to bring blocks and write blocks on site, test interoperability, and leave the conference with a working DVB-S2 receiver. This is the central mission for successful continued research and development and we need all hands on deck."),ge=d(),ve=h("p"),ye=l("If you’ve have never coded a block in GNU Radio, then don’t worry. It wasn’t until the past year that I had ever coded up a block for GNU Radio. I just had never needed to. There is a series of guided tutorials from GNU Radio’s website. The link is in the notes."),we=d(),be=h("p"),ke=h("a"),Pe=l("https://wiki.gnuradio.org/index.php/Guided_Tutorials"),Ee=d(),Ie=h("p"),Te=l("Go there, or search them up with “gnu radio guided tutorials”, walk through them, and you will have the tools and the workflow experience to be able to contribute."),Se=d(),Re=h("p"),Ge=l("Having said that, if you are only comfortable coding in python or C++ then that’s ok too. If you have an idea for getting some part of the DVB-S2 digital signal processing done, and either don’t have time to work through block coding or pybombs distribution, then you can certainly still help by sharing your signal processing code. Don’t let GNU Radio block configuration stop you. You’re needed and appreciated."),We=d(),Ae=h("h2"),Be=l("KA9Q SDR - stereo field"),xe=d(),De=h("p"),Ce=l("Phil Karn has shared a work in progress with us. He calls it the KA9Q SDR. However, the module in this SDR code that I’d like to highlight is a stereo field audio adapter."),je=d(),Ue=h("p"),He=l("This works by taking in multicast audio streams. Each audio stream comes from an individual audio source, or participant. These participants in a round table audio conference are placed at different points in the stereo spectrum."),Ne=d(),Ve=h("p"),Ke=l("Phil Writes:"),ze=d(),Me=h("p"),Oe=l("I’m writing a lightweight, modular SDR package that uses IP multicast\nfor inter-module communication. Multicasting is very flexible and\nconvenient for this sort of real-time application, and I really think\nit should become standard practice."),qe=d(),Je=h("p"),Qe=l("One module is an audio decoder-player. I’m often running several SDRs\nat once so I wrote it to handle multiple multicast streams. Since\nseveral mixed audio streams can be confusing, I’ve been experimenting\nwith ways to help the user distinguish them."),Ye=d(),Fe=h("p"),_e=l("I started with a simple text display that lists the streams and their\ntypes and sources, highlighting those that are currently active. You\ncan individually adjust levels or ignore those you don’t want."),Ze=d(),Xe=h("p"),Le=l("Since most sources are mono, I added the ability to give each one its\nplace in the stereo aural image. I’m trying to recreate the famous\n“cocktail party effect” that, in person, helps you pick out one voice\nfrom several talking at once."),$e=d(),et=h("p"),tt=l("Audio engineers typically place a source in a stereo image with a\nmixer “pan pot” that adjusts its gain in each channel. This works -\nsort of. I wanted to find something better."),at=d(),ot=h("p"),nt=l("So I read up auditory perception. I learned that we distinguish the\ndirection of a sound only partly by the level difference between our\nears, as that doesn’t actually change much as your head turns.  The\n"),it=h("em"),rt=l("real"),st=l(" cue is the difference in arrival time. The speed of sound is\nabout 340 m/s, so if our ears are 30 cm apart (measuring around the\nhead) that’s a little less than a millisecond."),ht=d(),lt=h("p"),dt=l("This didn’t seem like much, but it was very easy to add these small\ndelays to the “pan pots” in my player. And it works! The effect is\nalmost eerie; you have to listen to each channel in turn to convince\nyourself that the levels are almost the same."),ct=d(),ut=h("p"),pt=l("Conference calls (or “round tables” as we hams call them) are very\nimportant in communications. I’ve long thought we can make them much\nbetter, especially in how we handle several simultaneous speakers.  If\nwe use this scheme to place each participant in a round table we\nshould get a lot closer to that “in person” experience that’s so\ndifficult to produce in electronic communications."),ft=d(),mt=h("p"),gt=l("All this requires that each participant receives every other\nparticipant as a separate stream — there’s no central “conference\nbridge” that mixes everybody together. This is a perfect application\nfor IP multicasting. Not only can you put each participant in its\nplace, the status display shows you at a glance who’s talking. You can\nsquelch an individual who keeps disrupting the meeting, and you can\neven have a private aside by sending unicast traffic rather than\nmulticasting to the entire group."),vt=d(),yt=h("p"),wt=l("A lot of this was done as research in the early days of what became\n‘voice over IP’ (VoIP) but it seems to have fallen by the wayside. It\nreally deserves to be more widely recognized and used."),bt=d(),kt=h("p"),Pt=l("Phil Karn, KA9Q"),Et=h("br"),It=l("\n9 April 2018"),Tt=d(),St=h("h2"),Rt=l("Careful COTS SDR"),Gt=d(),Wt=h("p"),At=l("We are making great progress on the Careful COTS re-layout of a USRP E310 with future plans to tackle the E320. We’re collaborating with AMSAT Golf on this and have gained enthusiastic support from Ettus Research engineering. The next steps are to negotiate what’s needed on the business side. Scheduling talks is in progress."),Bt=d(),xt=h("p"),Dt=l("If you’re not familiar with the term, Careful COTS - COTS means commercial off the shelf - is taking something that wasn’t designed specifically for space and making it work for space environments. This is done by selection of the right components, designing in redundancy at the system level, and testing the entire system for radiation tolerance."),Ct=d(),jt=h("p"),Ut=l("We have a high degree of confidence that the Ettus USRP will work and some volunteers willing to do the work. If you are interested in this part of the project, let me know."),Ht=d(),Nt=h("h2"),Vt=l("Badge Update"),Kt=d(),zt=h("p"),Mt=l("The Transionospheric badge prototypes are being built at a contract manufacturer in San Diego right now. We are working hard to have them at Hamvention for sale. All proceeds benefit Phase 4 Ground! They aren’t just for show, they will be a radio peripheral for Phase 4 Ground radios, providing a lot of visual reinforcement on what your radio is doing and the health and status of your link. Whether you have a satellite or a terrestrial system, the same information will be stylishly displayed. We are working hard to make it possible to command other radios as well. More on that as it develops!"),Ot=d(),qt=h("p"),Jt=l("If you want to be part of the effort, then join our Slack and mailing list at "),Qt=h("a"),Yt=l("http://lists.openresearch.institute/mailman/listinfo/ground-station"),Ft=d(),_t=h("p"),Zt=l("Write me for an invitation to Slack. All are welcome. This project is intended to spread enjoyment, appreciation, and success in broadband digital communications at microwave for amateur radio use. A lot of what we do is complex and challenging, but we are here to help and you can contribute at any level."),Xt=d(),Lt=h("p"),$t=l("Thank you for all the support and interest. If you have suggestions or questions or something you think we need to know about, let us know. If all goes well, we’ll see you next week!"),this.h()},l:function(e){t=c(e,"P",{});var h=u(t);a=p(h,"Welcome to the Phase 4 Ground Weekly Report!"),h.forEach(f),o=m(e),n=c(e,"P",{});var l=u(n);i=p(l,"409!"),l.forEach(f),r=m(e),s=c(e,"P",{});var d=u(s);b=p(d,"Video link\n"),k=c(d,"A",{href:!0,rel:!0});var g=u(k);P=p(g,"https://youtu.be/6tW04jWZGjM"),g.forEach(f),d.forEach(f),E=m(e),I=c(e,"H2",{});var v=u(I);T=p(v,"2 4 6 8 Everybody Correlate!"),v.forEach(f),S=m(e),R=c(e,"P",{});var y=u(R);G=p(y,"Correlator team had a conference call on Thursday 5 April 2018. Jordan, Brennan, Ed, and I talked on the conference bridge Ed set up for us for about 45 minutes. We covered a lot of ground and got some idea of next steps. We have a repository that has GNU Radio draft blocks that do the Pi/2 BPSK demodulation and decoding, and we need to get it working as a correlator."),y.forEach(f),W=m(e),A=c(e,"P",{});var w=u(A);B=p(w,"We also have a correlation estimation block in GNU Radio that has an issue."),w.forEach(f),x=m(e),D=c(e,"P",{});var ea=u(D);C=p(ea,"Brennan Ashton reviewed our block and didn’t see any major issues yet, and then went out to see what he could see about the correlation estimation block."),ea.forEach(f),j=m(e),U=c(e,"P",{});var ta=u(U);H=p(ta,"Please review Brennan’s pull request here:\n"),N=c(ta,"A",{href:!0,rel:!0});var aa=u(N);V=p(aa,"https://github.com/gnuradio/gnuradio/pull/1725"),aa.forEach(f),ta.forEach(f),K=m(e),z=c(e,"P",{});var oa=u(z);M=p(oa,"This is an attempt to solve this issue here:\n"),O=c(oa,"A",{href:!0,rel:!0});var na=u(O);q=p(na,"https://github.com/gnuradio/gnuradio/issues/1207"),na.forEach(f),oa.forEach(f),J=m(e),Q=c(e,"P",{});var ia=u(Q);Y=p(ia,"Which if successful will help us and a lot of other people."),ia.forEach(f),F=m(e),_=c(e,"P",{});var ra=u(_);Z=p(ra,"This effort is in progress and will be updated as the code is reviewed and feedback from GNU Radio given."),ra.forEach(f),X=m(e),L=c(e,"H2",{});var sa=u(L);$=p(sa,"10GHz Filter"),sa.forEach(f),ee=m(e),te=c(e,"P",{});var ha=u(te);ae=p(ha,"We have a 10GHz filter design proposed from Jeffrey Pawlan."),ha.forEach(f),oe=m(e),ne=c(e,"P",{});var la=u(ne);ie=p(la,"It covers the 10GHz amateur band, has 0.1dB variation over the band, 0.1dB insertion loss, and 20-30dB return loss. It’s a high-performance filter and we are talking about how to get it published, how many prototypes to build, and what the potential market might be. Here’s the first four documents from Jeffrey. These are in the repository at the link in the notes. If you have feedback we want to hear it."),la.forEach(f),re=m(e),se=c(e,"P",{});var da=u(se);he=c(da,"A",{href:!0,rel:!0});var ca=u(he);le=p(ca,"https://github.com/phase4ground/DVB-receiver/tree/master/Pawlan-10GHz-Filter"),ca.forEach(f),da.forEach(f),de=m(e),ce=c(e,"H2",{});var ua=u(ce);ue=p(ua,"Block Party at GNU Radio Conference 2018"),ua.forEach(f),pe=m(e),fe=c(e,"P",{});var pa=u(fe);me=p(pa,"We are sponsoring a Block Party at GNU Radio Conference 2018. This is a multi-day hackfest, workshop, and summit all about making an open source DVB-S2 and DVB-S2X receiver in GNU Radio. Come and help. We have five solid technical docents for the event and could use more. The goal is to bring blocks and write blocks on site, test interoperability, and leave the conference with a working DVB-S2 receiver. This is the central mission for successful continued research and development and we need all hands on deck."),pa.forEach(f),ge=m(e),ve=c(e,"P",{});var fa=u(ve);ye=p(fa,"If you’ve have never coded a block in GNU Radio, then don’t worry. It wasn’t until the past year that I had ever coded up a block for GNU Radio. I just had never needed to. There is a series of guided tutorials from GNU Radio’s website. The link is in the notes."),fa.forEach(f),we=m(e),be=c(e,"P",{});var ma=u(be);ke=c(ma,"A",{href:!0,rel:!0});var ga=u(ke);Pe=p(ga,"https://wiki.gnuradio.org/index.php/Guided_Tutorials"),ga.forEach(f),ma.forEach(f),Ee=m(e),Ie=c(e,"P",{});var va=u(Ie);Te=p(va,"Go there, or search them up with “gnu radio guided tutorials”, walk through them, and you will have the tools and the workflow experience to be able to contribute."),va.forEach(f),Se=m(e),Re=c(e,"P",{});var ya=u(Re);Ge=p(ya,"Having said that, if you are only comfortable coding in python or C++ then that’s ok too. If you have an idea for getting some part of the DVB-S2 digital signal processing done, and either don’t have time to work through block coding or pybombs distribution, then you can certainly still help by sharing your signal processing code. Don’t let GNU Radio block configuration stop you. You’re needed and appreciated."),ya.forEach(f),We=m(e),Ae=c(e,"H2",{});var wa=u(Ae);Be=p(wa,"KA9Q SDR - stereo field"),wa.forEach(f),xe=m(e),De=c(e,"P",{});var ba=u(De);Ce=p(ba,"Phil Karn has shared a work in progress with us. He calls it the KA9Q SDR. However, the module in this SDR code that I’d like to highlight is a stereo field audio adapter."),ba.forEach(f),je=m(e),Ue=c(e,"P",{});var ka=u(Ue);He=p(ka,"This works by taking in multicast audio streams. Each audio stream comes from an individual audio source, or participant. These participants in a round table audio conference are placed at different points in the stereo spectrum."),ka.forEach(f),Ne=m(e),Ve=c(e,"P",{});var Pa=u(Ve);Ke=p(Pa,"Phil Writes:"),Pa.forEach(f),ze=m(e),Me=c(e,"P",{});var Ea=u(Me);Oe=p(Ea,"I’m writing a lightweight, modular SDR package that uses IP multicast\nfor inter-module communication. Multicasting is very flexible and\nconvenient for this sort of real-time application, and I really think\nit should become standard practice."),Ea.forEach(f),qe=m(e),Je=c(e,"P",{});var Ia=u(Je);Qe=p(Ia,"One module is an audio decoder-player. I’m often running several SDRs\nat once so I wrote it to handle multiple multicast streams. Since\nseveral mixed audio streams can be confusing, I’ve been experimenting\nwith ways to help the user distinguish them."),Ia.forEach(f),Ye=m(e),Fe=c(e,"P",{});var Ta=u(Fe);_e=p(Ta,"I started with a simple text display that lists the streams and their\ntypes and sources, highlighting those that are currently active. You\ncan individually adjust levels or ignore those you don’t want."),Ta.forEach(f),Ze=m(e),Xe=c(e,"P",{});var Sa=u(Xe);Le=p(Sa,"Since most sources are mono, I added the ability to give each one its\nplace in the stereo aural image. I’m trying to recreate the famous\n“cocktail party effect” that, in person, helps you pick out one voice\nfrom several talking at once."),Sa.forEach(f),$e=m(e),et=c(e,"P",{});var Ra=u(et);tt=p(Ra,"Audio engineers typically place a source in a stereo image with a\nmixer “pan pot” that adjusts its gain in each channel. This works -\nsort of. I wanted to find something better."),Ra.forEach(f),at=m(e),ot=c(e,"P",{});var Ga=u(ot);nt=p(Ga,"So I read up auditory perception. I learned that we distinguish the\ndirection of a sound only partly by the level difference between our\nears, as that doesn’t actually change much as your head turns.  The\n"),it=c(Ga,"EM",{});var Wa=u(it);rt=p(Wa,"real"),Wa.forEach(f),st=p(Ga," cue is the difference in arrival time. The speed of sound is\nabout 340 m/s, so if our ears are 30 cm apart (measuring around the\nhead) that’s a little less than a millisecond."),Ga.forEach(f),ht=m(e),lt=c(e,"P",{});var Aa=u(lt);dt=p(Aa,"This didn’t seem like much, but it was very easy to add these small\ndelays to the “pan pots” in my player. And it works! The effect is\nalmost eerie; you have to listen to each channel in turn to convince\nyourself that the levels are almost the same."),Aa.forEach(f),ct=m(e),ut=c(e,"P",{});var Ba=u(ut);pt=p(Ba,"Conference calls (or “round tables” as we hams call them) are very\nimportant in communications. I’ve long thought we can make them much\nbetter, especially in how we handle several simultaneous speakers.  If\nwe use this scheme to place each participant in a round table we\nshould get a lot closer to that “in person” experience that’s so\ndifficult to produce in electronic communications."),Ba.forEach(f),ft=m(e),mt=c(e,"P",{});var xa=u(mt);gt=p(xa,"All this requires that each participant receives every other\nparticipant as a separate stream — there’s no central “conference\nbridge” that mixes everybody together. This is a perfect application\nfor IP multicasting. Not only can you put each participant in its\nplace, the status display shows you at a glance who’s talking. You can\nsquelch an individual who keeps disrupting the meeting, and you can\neven have a private aside by sending unicast traffic rather than\nmulticasting to the entire group."),xa.forEach(f),vt=m(e),yt=c(e,"P",{});var Da=u(yt);wt=p(Da,"A lot of this was done as research in the early days of what became\n‘voice over IP’ (VoIP) but it seems to have fallen by the wayside. It\nreally deserves to be more widely recognized and used."),Da.forEach(f),bt=m(e),kt=c(e,"P",{});var Ca=u(kt);Pt=p(Ca,"Phil Karn, KA9Q"),Et=c(Ca,"BR",{}),It=p(Ca,"\n9 April 2018"),Ca.forEach(f),Tt=m(e),St=c(e,"H2",{});var ja=u(St);Rt=p(ja,"Careful COTS SDR"),ja.forEach(f),Gt=m(e),Wt=c(e,"P",{});var Ua=u(Wt);At=p(Ua,"We are making great progress on the Careful COTS re-layout of a USRP E310 with future plans to tackle the E320. We’re collaborating with AMSAT Golf on this and have gained enthusiastic support from Ettus Research engineering. The next steps are to negotiate what’s needed on the business side. Scheduling talks is in progress."),Ua.forEach(f),Bt=m(e),xt=c(e,"P",{});var Ha=u(xt);Dt=p(Ha,"If you’re not familiar with the term, Careful COTS - COTS means commercial off the shelf - is taking something that wasn’t designed specifically for space and making it work for space environments. This is done by selection of the right components, designing in redundancy at the system level, and testing the entire system for radiation tolerance."),Ha.forEach(f),Ct=m(e),jt=c(e,"P",{});var Na=u(jt);Ut=p(Na,"We have a high degree of confidence that the Ettus USRP will work and some volunteers willing to do the work. If you are interested in this part of the project, let me know."),Na.forEach(f),Ht=m(e),Nt=c(e,"H2",{});var Va=u(Nt);Vt=p(Va,"Badge Update"),Va.forEach(f),Kt=m(e),zt=c(e,"P",{});var Ka=u(zt);Mt=p(Ka,"The Transionospheric badge prototypes are being built at a contract manufacturer in San Diego right now. We are working hard to have them at Hamvention for sale. All proceeds benefit Phase 4 Ground! They aren’t just for show, they will be a radio peripheral for Phase 4 Ground radios, providing a lot of visual reinforcement on what your radio is doing and the health and status of your link. Whether you have a satellite or a terrestrial system, the same information will be stylishly displayed. We are working hard to make it possible to command other radios as well. More on that as it develops!"),Ka.forEach(f),Ot=m(e),qt=c(e,"P",{});var za=u(qt);Jt=p(za,"If you want to be part of the effort, then join our Slack and mailing list at "),Qt=c(za,"A",{href:!0,rel:!0});var Ma=u(Qt);Yt=p(Ma,"http://lists.openresearch.institute/mailman/listinfo/ground-station"),Ma.forEach(f),za.forEach(f),Ft=m(e),_t=c(e,"P",{});var Oa=u(_t);Zt=p(Oa,"Write me for an invitation to Slack. All are welcome. This project is intended to spread enjoyment, appreciation, and success in broadband digital communications at microwave for amateur radio use. A lot of what we do is complex and challenging, but we are here to help and you can contribute at any level."),Oa.forEach(f),Xt=m(e),Lt=c(e,"P",{});var qa=u(Lt);$t=p(qa,"Thank you for all the support and interest. If you have suggestions or questions or something you think we need to know about, let us know. If all goes well, we’ll see you next week!"),qa.forEach(f),this.h()},h:function(){g(k,"href","https://youtu.be/6tW04jWZGjM"),g(k,"rel","nofollow"),g(N,"href","https://github.com/gnuradio/gnuradio/pull/1725"),g(N,"rel","nofollow"),g(O,"href","https://github.com/gnuradio/gnuradio/issues/1207"),g(O,"rel","nofollow"),g(he,"href","https://github.com/phase4ground/DVB-receiver/tree/master/Pawlan-10GHz-Filter"),g(he,"rel","nofollow"),g(ke,"href","https://wiki.gnuradio.org/index.php/Guided_Tutorials"),g(ke,"rel","nofollow"),g(Qt,"href","http://lists.openresearch.institute/mailman/listinfo/ground-station"),g(Qt,"rel","nofollow")},m:function(e,h){v(e,t,h),y(t,a),v(e,o,h),v(e,n,h),y(n,i),v(e,r,h),v(e,s,h),y(s,b),y(s,k),y(k,P),v(e,E,h),v(e,I,h),y(I,T),v(e,S,h),v(e,R,h),y(R,G),v(e,W,h),v(e,A,h),y(A,B),v(e,x,h),v(e,D,h),y(D,C),v(e,j,h),v(e,U,h),y(U,H),y(U,N),y(N,V),v(e,K,h),v(e,z,h),y(z,M),y(z,O),y(O,q),v(e,J,h),v(e,Q,h),y(Q,Y),v(e,F,h),v(e,_,h),y(_,Z),v(e,X,h),v(e,L,h),y(L,$),v(e,ee,h),v(e,te,h),y(te,ae),v(e,oe,h),v(e,ne,h),y(ne,ie),v(e,re,h),v(e,se,h),y(se,he),y(he,le),v(e,de,h),v(e,ce,h),y(ce,ue),v(e,pe,h),v(e,fe,h),y(fe,me),v(e,ge,h),v(e,ve,h),y(ve,ye),v(e,we,h),v(e,be,h),y(be,ke),y(ke,Pe),v(e,Ee,h),v(e,Ie,h),y(Ie,Te),v(e,Se,h),v(e,Re,h),y(Re,Ge),v(e,We,h),v(e,Ae,h),y(Ae,Be),v(e,xe,h),v(e,De,h),y(De,Ce),v(e,je,h),v(e,Ue,h),y(Ue,He),v(e,Ne,h),v(e,Ve,h),y(Ve,Ke),v(e,ze,h),v(e,Me,h),y(Me,Oe),v(e,qe,h),v(e,Je,h),y(Je,Qe),v(e,Ye,h),v(e,Fe,h),y(Fe,_e),v(e,Ze,h),v(e,Xe,h),y(Xe,Le),v(e,$e,h),v(e,et,h),y(et,tt),v(e,at,h),v(e,ot,h),y(ot,nt),y(ot,it),y(it,rt),y(ot,st),v(e,ht,h),v(e,lt,h),y(lt,dt),v(e,ct,h),v(e,ut,h),y(ut,pt),v(e,ft,h),v(e,mt,h),y(mt,gt),v(e,vt,h),v(e,yt,h),y(yt,wt),v(e,bt,h),v(e,kt,h),y(kt,Pt),y(kt,Et),y(kt,It),v(e,Tt,h),v(e,St,h),y(St,Rt),v(e,Gt,h),v(e,Wt,h),y(Wt,At),v(e,Bt,h),v(e,xt,h),y(xt,Dt),v(e,Ct,h),v(e,jt,h),y(jt,Ut),v(e,Ht,h),v(e,Nt,h),y(Nt,Vt),v(e,Kt,h),v(e,zt,h),y(zt,Mt),v(e,Ot,h),v(e,qt,h),y(qt,Jt),y(qt,Qt),y(Qt,Yt),v(e,Ft,h),v(e,_t,h),y(_t,Zt),v(e,Xt,h),v(e,Lt,h),y(Lt,$t)},p:w,i:w,o:w,d:function(e){e&&f(t),e&&f(o),e&&f(n),e&&f(r),e&&f(s),e&&f(E),e&&f(I),e&&f(S),e&&f(R),e&&f(W),e&&f(A),e&&f(x),e&&f(D),e&&f(j),e&&f(U),e&&f(K),e&&f(z),e&&f(J),e&&f(Q),e&&f(F),e&&f(_),e&&f(X),e&&f(L),e&&f(ee),e&&f(te),e&&f(oe),e&&f(ne),e&&f(re),e&&f(se),e&&f(de),e&&f(ce),e&&f(pe),e&&f(fe),e&&f(ge),e&&f(ve),e&&f(we),e&&f(be),e&&f(Ee),e&&f(Ie),e&&f(Se),e&&f(Re),e&&f(We),e&&f(Ae),e&&f(xe),e&&f(De),e&&f(je),e&&f(Ue),e&&f(Ne),e&&f(Ve),e&&f(ze),e&&f(Me),e&&f(qe),e&&f(Je),e&&f(Ye),e&&f(Fe),e&&f(Ze),e&&f(Xe),e&&f($e),e&&f(et),e&&f(at),e&&f(ot),e&&f(ht),e&&f(lt),e&&f(ct),e&&f(ut),e&&f(ft),e&&f(mt),e&&f(vt),e&&f(yt),e&&f(bt),e&&f(kt),e&&f(Tt),e&&f(St),e&&f(Gt),e&&f(Wt),e&&f(Bt),e&&f(xt),e&&f(Ct),e&&f(jt),e&&f(Ht),e&&f(Nt),e&&f(Kt),e&&f(zt),e&&f(Ot),e&&f(qt),e&&f(Ft),e&&f(_t),e&&f(Xt),e&&f(Lt)}}}var P=function(t){e(h,r);var a=b(h);function h(e){var t;return o(this,h),t=a.call(this),n(i(t),e,null,k,s,{}),t}return h}();export default P;
